import { Component } from 'react';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

/**
 * @class ThemeSwitcher
 */
var ThemeSwitcher = /** @class */ (function (_super) {
    __extends(ThemeSwitcher, _super);
    function ThemeSwitcher() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.optionalElement = null;
        return _this;
    }
    ThemeSwitcher.prototype.componentDidMount = function () {
        if (this.props.elementId != null) {
            this.optionalElement = document.getElementById(this.props.elementId);
        }
        if (this.props.theme) {
            this.setCssVariables(this.props.theme);
        }
    };
    ThemeSwitcher.prototype.componentDidUpdate = function (prevProps) {
        if (prevProps.theme !== this.props.theme) {
            if (this.props.theme != null) {
                if (prevProps.theme != null) {
                    this.unsetCssVariables(prevProps.theme);
                }
                this.setCssVariables(this.props.theme);
            }
            else {
                if (prevProps.theme != null) {
                    this.unsetCssVariables(prevProps.theme);
                }
            }
        }
    };
    ThemeSwitcher.prototype.unsetCssVariables = function (variables) {
        var element = this.optionalElement || document.documentElement;
        Object.keys(variables).forEach(function (key) {
            if (element == null)
                return;
            element.style.removeProperty("--" + key);
        });
    };
    ThemeSwitcher.prototype.setCssVariables = function (variables) {
        var element = this.optionalElement || document.documentElement;
        Object.keys(variables).forEach(function (key) {
            if (element == null)
                return;
            element.style.setProperty("--" + key, variables[key]);
        });
    };
    ThemeSwitcher.prototype.render = function () {
        return this.props.children || null;
    };
    ThemeSwitcher.defaultProps = {
        elementId: null,
    };
    return ThemeSwitcher;
}(Component));

export default ThemeSwitcher;
//# sourceMappingURL=index.es.js.map
